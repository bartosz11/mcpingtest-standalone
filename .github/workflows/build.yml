name: Build JAR, Docker image and release

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Get source code
        uses: actions/checkout@v3
      - name: Get short commit hash
        id: short_commit_hash
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Set gradlew permissions
        run: chmod u+x gradlew
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: shadowJar
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: bartosz11/mcpingtest-standalone:latest
          platforms: linux/amd64,linux/arm64/v8,linux/arm/v7
      - name: Create release
        if: github.event_name != 'pull_request'
        id: create_release
        uses: ncipollo/release-action@v1.12.0
        with:
          artifacts: "build/libs/mcpingtest-server.jar"
          artifactContentType: "application/java-archive"
          name: Release commit ${{ steps.short_commit_hash.outputs.sha_short }}
          tag: ${{ steps.short_commit_hash.outputs.sha_short }}
          commit: ${{ github.sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          makeLatest: true